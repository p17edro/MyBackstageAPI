apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: my-backstage-api
  description: A REST API with Swashbuckle and NSwag.
  tags:
    - rest
    - csharp
  annotations:
    backstage.io/swagger-ui: https://127.0.0.1:7293/swagger/v1/swagger.json  # <- Swagger UI funcionando
spec:
  type: openapi
  lifecycle: development
  owner: guest
  definition: |
    {
      "openapi": "3.0.4",
      "info": {
        "title": "My Backstage API",
        "description": "A REST API integrated with Backstage and NSwag.",
        "version": "v1"
      },
      "paths": {
        "/WeatherForecast": {
          "get": {
            "tags": ["WeatherForecast"],
            "summary": "Gets the weather forecast.",
            "responses": {
              "200": {
                "description": "Returns the weather forecast",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WeatherForecast"
                      }
                    }
                  },
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WeatherForecast"
                      }
                    }
                  },
                  "text/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WeatherForecast"
                      }
                    }
                  }
                }
              }
            }
          },
          "post": {
            "tags": ["WeatherForecast"],
            "summary": "Adds a new WeatherForecast.",
            "description": "Sample request:\r\n\r\n```json\r\nPOST /WeatherForecast\r\n{\r\n    \"Date\": \"2022-01-01T00:00:00\",\r\n    \"TemperatureC\": 23,\r\n    \"TemperatureF\": 74,\r\n    \"Summary\": \"Sunny\"\r\n}\r\n```",
            "requestBody": {
              "description": "The weather forecast to add.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                },
                "application/*+json": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "Returns the newly created weather forecast."
              }
            }
          }
        },
        "/WeatherForecast/{date}": {
          "delete": {
            "tags": ["WeatherForecast"],
            "summary": "Deletes a weather forecast.",
            "parameters": [
              {
                "name": "date",
                "in": "path",
                "description": "The date of the weather forecast to delete.",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ],
            "responses": {
              "204": {
                "description": "Indicates the weather forecast was deleted"
              }
            }
          }
        }
      },
      "components": {
        "schemas": {
          "WeatherForecast": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "description": "The date of the forecast.",
                "format": "date-time"
              },
              "temperatureC": {
                "type": "integer",
                "description": "Temperature in Celsius.",
                "format": "int32"
              },
              "temperatureF": {
                "type": "integer",
                "description": "A short weather description.",
                "format": "int32",
                "readOnly": true
              },
              "summary": {
                "type": "string",
                "description": "A short weather description.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        }
      }
    }
